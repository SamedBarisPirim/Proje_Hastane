<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>